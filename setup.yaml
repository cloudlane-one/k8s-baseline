- name: Install k3s on all cluster nodes and bootstrap infrastructure
  hosts: k3s_cluster
  become: true
  vars:
    k3s_become: true
    k3s_etcd_datastore: true
    k3s_server:
      node-taint:
        - "node.cilium.io/agent-not-ready=true:NoExecute"
      flannel-backend: "none"
      disable:
        - traefik
        - local-storage
      kube-apiserver-arg:
        - "oidc-issuer-url=https://{{ (helm_values.subdomains | default({})).dex | default('admin-oidc') }}.{{ helm_values.domain }}"
        - "oidc-client-id=admin-oidc"
        - "oidc-groups-claim=groups"
    k3s_agent:
      node-taint:
        - "node.cilium.io/agent-not-ready=true:NoExecute"
  tasks:
    - name: Set control_node variable for master hosts
      ansible.builtin.set_fact:
        k3s_control_node: true
      when: "'masters' in group_names"

    - name: Ensure NFS client is installed (apt)
      ansible.builtin.apt:
        name: nfs-common
        update_cache: yes
      when: 'ansible_pkg_mgr == "apt"'

    - name: Ensure NFS client is installed (yum)
      ansible.builtin.apt:
        name: nfs-utils
        update_cache: yes
      when: 'ansible_pkg_mgr == "yum"'

    - name: Ensure NFS client is installed (apk)
      community.general.apk:
        name: nfs-utils
        update_cache: yes
      when: 'ansible_pkg_mgr == "apk"'

    - name: Ensure NFS client is installed (dnf)
      ansible.builtin.dnf:
        name: nfs-utils
        update_cache: yes
      when: 'ansible_pkg_mgr == "dnf"'

    - name: Ensure NFS client is installed (zypper)
      community.general.zypper:
        name: nfs-utils
        update_cache: yes
      when: 'ansible_pkg_mgr == "zypper"'

    - name: Ensure NFS client is installed (pacman)
      community.general.pacman:
        name: nfs-utils
        update_cache: yes
      when: 'ansible_pkg_mgr == "pacman"'

    - name: Install k3s via role
      ansible.builtin.include_role:
        name: xanmanning.k3s

- name: Set up GitOps for cluster infrastructure via FluxCD
  hosts: masters
  run_once: true
  environment:
    K8S_AUTH_KUBECONFIG: /etc/rancher/k3s/k3s.yaml
  tasks:
    - name: Ensure PIP is installed
      ansible.builtin.package:
        name: pip

    - name: Ensure PIP dependencies for k8s module are installed
      ansible.builtin.pip:
        name:
          - pyyaml>=3.11
          - kubernetes>=12.0.0
          - jsonpatch

    - name: Download Helm install script
      ansible.builtin.get_url:
        url: https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3
        dest: /tmp/helm-install.sh
        mode: "0700"

    - name: Ensure Helm is installed
      ansible.builtin.command: /tmp/helm-install.sh

    - name: Ensure helm diff plugin is installed
      ansible.builtin.command: "helm plugin install https://github.com/databus23/helm-diff"

    - name: Copy values files for bootstrap helm charts
      ansible.builtin.copy:
        src: infrastructure/bootstrap-values
        dest: /tmp/bootstrap-chart-values

    - name: Ensure Cilium is installed
      kubernetes.core.helm:
        name: cilium
        release_namespace: kube-system
        chart_repo_url: https://helm.cilium.io/
        chart_ref: cilium
        chart_version: "^1"
        values_files:
          - /tmp/bootstrap-chart-values/cilium.yaml

    - name: Ensure Cert-Manager is installed
      kubernetes.core.helm:
        name: cert-manager
        release_namespace: cert-system
        create_namespace: true
        chart_repo_url: https://charts.jetstack.io
        chart_ref: cert-manager
        chart_version: "^1"
        values_files:
          - /tmp/bootstrap-chart-values/cert-manager.yaml

    - name: Ensure FluxCD is installed
      kubernetes.core.helm:
        name: fluxcd
        release_namespace: flux-system
        create_namespace: true
        chart_repo_url: https://fluxcd-community.github.io/helm-charts
        chart_ref: flux2
        chart_version: "^1"

    - name: Ensure Longhorn is installed
      kubernetes.core.helm:
        name: longhorn
        release_namespace: longhorn-system
        create_namespace: true
        chart_repo_url: https://charts.longhorn.io
        chart_ref: longhorn
        chart_version: "^1"
        values_files:
          - /tmp/bootstrap-chart-values/longhorn.yaml

    - name: Ensure Kube-Prometheus-Stack is installed
      kubernetes.core.helm:
        name: kube-prometheus-stack
        release_namespace: o11y-system
        create_namespace: true
        chart_repo_url: https://prometheus-community.github.io/helm-charts
        chart_ref: kube-prometheus-stack
        chart_version: "^40"

    - name: Ensure GitRepository for infrastructure chart exists
      kubernetes.core.k8s:
        definition:
          apiVersion: source.toolkit.fluxcd.io/v1beta2
          kind: GitRepository
          metadata:
            name: k8s-baseline
            namespace: flux-system
          spec:
            interval: 1h
            url: "{{ gitops_repo }}"
            ref:
              branch: "{{ gitops_branch }}"

    - name: Ensure HelmRelease for infrastructure chart exists
      kubernetes.core.k8s:
        definition:
          apiVersion: source.toolkit.fluxcd.io/v2beta1
          kind: HelmRelease
          metadata:
            name: k8s-baseline
            namespace: flux-system
          spec:
            interval: 1h
            chart:
              spec:
                chart: ./helm-flux
                sourceRef:
                  kind: GitRepository
                  name: k8s-baseline
                reconcileStrategy: Revision
            values: "{{ helm_values }}"
