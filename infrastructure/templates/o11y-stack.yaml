apiVersion: v1
kind: Namespace
metadata:
  name: o11y-system
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: prometheus-community
  namespace: flux-system
spec:
  interval: 1h
  url: https://prometheus-community.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
  namespace: o11y-system
spec:
  interval: 1h
  chart:
    spec:
      chart: kube-prometheus-stack
      version: "^40"
      sourceRef:
        kind: HelmRepository
        name: prometheus-community
        namespace: flux-system
  install:
    crds: CreateReplace
  upgrade:
    crds: CreateReplace
  values:
    prometheus:
      prometheusSpec:
        serviceMonitorSelectorNilUsesHelmValues: false
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        storageSpec:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 8Gi
    grafana:
      adminPassword: {{ .Values.clusterSecret | quote }}
      grafana.ini:
        auth.proxy:
          # see: https://grafana.com/docs/grafana/v9.0/setup-grafana/configure-security/configure-authentication/auth-proxy/
          enabled: true
          header_name: X-Auth-Request-Email
          header_property: email
          auto_sign_up: true
          headers: Name:X-Auth-Request-Preferred-Username Groups:X-Auth-Request-Groups
      additionalDataSources:
        - name: loki
          access: proxy
          editable: false
          jsonData:
            tlsSkipVerify: true
          type: loki
          url: http://loki:80/
          version: 1
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: acme
          {{ include "admin_auth_annotations" . | nindent 10 }}
        hosts:
          - {{ include "get_hostname" (dict "service" "grafana" "context" $) }}
        tls:
          - hosts:
              - {{ include "get_hostname" (dict "service" "grafana" "context" $) }}
            secretName: grafana-cert
    alertmanager:
      alertmanagerSpec:
        storage:
          volumeClaimTemplate:
            spec:
              accessModes: ["ReadWriteOnce"]
              resources:
                requests:
                  storage: 8Gi
      ingress:
        enabled: true
        annotations:
          cert-manager.io/cluster-issuer: acme
          {{ include "admin_auth_annotations" . | nindent 10 }}
        hosts:
          - {{ include "get_hostname" (dict "service" "alertmanager" "context" $) }}
        tls:
          - hosts:
              - {{ include "get_hostname" (dict "service" "alertmanager" "context" $) }}
            secretName: alertmanager-cert
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: grafana
  namespace: flux-system
spec:
  interval: 1h
  url: https://grafana.github.io/helm-charts
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: loki-stack
  namespace: o11y-system
spec:
  interval: 1h
  chart:
    spec:
      chart: loki-stack
      version: "^2"
      sourceRef:
        kind: HelmRepository
        name: grafana
        namespace: flux-system
  values:
    loki:
      serviceName: loki
      service:
        port: 80
---
apiVersion: source.toolkit.fluxcd.io/v1beta2
kind: HelmRepository
metadata:
  name: kubernetes-dashboard
  namespace: flux-system
spec:
  interval: 1h
  url: https://kubernetes.github.io/dashboard
---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: kubernetes-dashboard
  namespace: o11y-system
spec:
  interval: 1h
  chart:
    spec:
      chart: kubernetes-dashboard
      version: "^5"
      sourceRef:
        kind: HelmRepository
        name: kubernetes-dashboard
        namespace: flux-system
  values:
    metricsScraper:
      enabled: true
    ingress:
      enabled: true
      annotations:
        cert-manager.io/cluster-issuer: acme
        {{ include "admin_auth_annotations" . | nindent 8 }}
      hosts:
        - {{ include "get_hostname" (dict "service" "k8s_dashboard" "context" $) }}
      tls:
        - hosts:
            - {{ include "get_hostname" (dict "service" "k8s_dashboard" "context" $) }}
          secretName: k8s-dashboard-cert
---